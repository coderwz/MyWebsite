{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/styles/makeStyles.js","webpack:///./node_modules/@material-ui/core/esm/Paper/Paper.js","webpack:///./node_modules/@material-ui/core/esm/Card/Card.js","webpack:///./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack:///./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack:///./src/components/blog-index-card.js","webpack:///./src/pages/blog.js"],"names":["stylesOrCreator","options","arguments","length","undefined","makeStyles","defaultTheme","forwardRef","props","ref","classes","classNameProp","className","_props$component","component","Component","_props$square","square","_props$elevation","elevation","other","root","concat","rounded","createElement","withStyles","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","name","_props$raised","raised","overflow","padding","paddingBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","margin","typography","caption","button","overline","srOnly","position","height","width","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","useStyles","card","minWidth","bullet","transform","title","fontSize","more","summary","BlogIndexCard","post","to","frontmatter","path","BlogIndexPage","posts","data","allMarkdownRemark","edges","filter","edge","node","date","map","key","id","pageQuery"],"mappings":"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","file":"component---src-pages-blog-js-9ef6e380560ec4224a67.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;","import \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    }\n  }, elevations);\n};\nvar Paper = React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (elevation < 0 || elevation >= 25) {\n      console.error(\"Material-UI: this elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n  }\n\n  var className = clsx(classes.root, classes[\"elevation\".concat(elevation)], classNameProp, !square && classes.rounded);\n  return React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: PropTypes.number,\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { capitalize } from '../utils/helpers';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   * By default, it maps the variant to a good default headline component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * We are empirically mapping the variant prop to a range of different DOM element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'gatsby';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    card: {\n      minWidth: 275,\n      marginBottom: 16,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 18,\n    },\n    more: {\n      fontSize: 12,\n      color: `#9E9E9E`,\n    },\n    summary: {\n        marginBottom: 12,\n        fontSize: 14,\n    },\n});\n\nconst BlogIndexCard = ({ post }) => {\n    const classes = useStyles();\n    return <Link to={post.frontmatter.path}>\n        <Card className={classes.card}>\n            <CardContent>\n                <Typography className={classes.title} color=\"textPrimary\" gutterBottom>\n                    {post.frontmatter.title}\n                </Typography>\n                <Typography className={classes.summary} color=\"textSecondary\" variant=\"body2\" component=\"p\">\n                    {post.frontmatter.summary}\n                </Typography>\n                <Typography className={classes.more} variant=\"caption\">\n                    Learn More...\n                </Typography>\n            </CardContent>\n        </Card>\n    </Link>;\n};\n\nexport default BlogIndexCard;\n","import React from 'react';\nimport BlogIndexCard from '../components/blog-index-card';\nimport Layout from '../components/layout';\nimport { graphql } from 'gatsby';\n\nconst BlogIndexPage = ({\n    data: {\n        allMarkdownRemark: { edges },\n    },\n}) => {\n    const posts = edges\n        .filter((edge) => !!edge.node.frontmatter.date)\n        .map((edge) => <BlogIndexCard key={edge.node.id} post={edge.node} />);\n    return <Layout title=\"Wen Zhu's Blog\" path='/blog/'><div className='blog-index'>{posts}</div></Layout>;\n};\n\nexport default BlogIndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            summary\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}