{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/css-grid-layout","webpackCompilationHash":"99799fb6266a6920be89","result":{"data":{"markdownRemark":{"html":"<h1>CSS Grid Layout</h1>\n<h2>Introduction</h2>\n<p>There have been several attempts in CSS area to tackle layout problem: Table, float, inline-block, etc. All of them are essentially hacks and left out a lot of a lot of important functionality like vertical centering. <a href=\"http://zhuwen.me/blog/2017/8/flexbox\">Flexbox</a> came out and helped a lot. However flexbox is a 1-dimensional grid system and doesn't work quite well for complex two-dimensional layout. </p>\n<p>CSS Grid Layout is a powerful grid system introduced to support both rows and columns. Similarly to Flexbox, it also has the concept of container element and children elements.</p>\n<p>Until now, most major browsers have natively supported grid syntax, check detailed <a href=\"https://caniuse.com/#search=grid\">Browser Support</a> in <a href=\"https://caniuse.com\">caniuse.com</a>.</p>\n<p>Note:\nCredit of most of the examples &#x26; images in this blog goes to <a href=\"https://css-tricks.com/snippets/css/complete-guide-grid\">CSS Tricks</a>.</p>\n<h2>Concept &#x26; Terminology</h2>\n<p>Grid Layout has container element and children elements. There are a set of css attributes for them respectively.</p>\n<h3>Grid Container</h3>\n<h4>display: grid | inline-grid | subgrid;</h4>\n<ul>\n<li><strong>grid</strong>: generates a block level grid.</li>\n<li><strong>inline-grid</strong>: generates a inline-block level grid.</li>\n<li><strong>subgrid</strong>:  if this grid itself is a grid item, you can use this property to indicate that this grid will use the size of rows and columns from its parent instead of specifying its own.</li>\n</ul>\n<h4>grid-template-rows &#x26; grid-template-columns</h4>\n<p>Those two properties are used to specify the rows and columns with space-separated list of values. The values represent the track size (cell size) and the space between them represents the grid line. There are quite a lot of more details for the properties, you can check <a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/#article-header-id-13\">this css-tricks blog</a>.</p>\n<p>An example:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 40px 50px auto 50px 40px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> 25% 100px auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2016/03/grid-numbers.png\" alt=\"grid-template-columns &#x26; grid-template-rows\"></p>\n<h4>grid-template-areas</h4>\n<p>This property defines the grid template by referencing the grid areas defined by <code class=\"language-text\">grid-area</code> property on grid items. By repeating the area name will span the area to multiple tracks/cells. A period means an empty cell.</p>\n<p>An example:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item-a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> header<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.item-b</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> main<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.item-c</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> sidebar<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.item-d</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-area</span><span class=\"token punctuation\">:</span> footer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.container</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-template-columns</span><span class=\"token punctuation\">:</span> 50px 50px 50px 50px<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-rows</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-template-area</span><span class=\"token punctuation\">:</span>\n    <span class=\"token string\">\"header header header header\"</span>\n    <span class=\"token string\">\"main main . sidebar\"</span>\n   <span class=\"token string\">\"footer footer footer footer\"</span>\t\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2016/03/grid-template-areas.png\"></p>\n<h3>Grid Items</h3>\n<h4>grid-column-start, grid-column-end, grid-row-start, grid-row-end</h4>\n<p>Those 4 properties are used to specify item location by referencing to grid lines.</p>\n<p>An example:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.item-a</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">grid-column-start</span><span class=\"token punctuation\">:</span> 2<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-column-end</span><span class=\"token punctuation\">:</span> five<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row-start</span><span class=\"token punctuation\">:</span> row1-start<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">grid-row-end</span><span class=\"token punctuation\">:</span> 3<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><img src=\"https://cdn.css-tricks.com/wp-content/uploads/2016/03/grid-start-end-a.png\" alt=\"grid-start-end-a.png\"></p>\n<p><code class=\"language-text\">grid-column</code> and <code class=\"language-text\">grid-row</code> are shorthand for the 4 properties.</p>\n<h4>grid-area</h4>\n<p>Gives an item an name so that it can be referenced by a template with <a href=\"#grid-template-areas\">grid-template-areas</a> property.</p>\n<p>There are quite a few other properties, you can check <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">MDN</a> or <a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">CSS Tricks</a>.</p>\n<h2>Examples</h2>\n<p>We will try to use Grid Layout technique to create a out blog layout style.</p>\n<iframe width=\"100%\" height=\"300\" src=\"//jsfiddle.net/coderwz/o7440kwx/embedded/html,css,result/\" allowpaymentrequest allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>\n<h2>References</h2>\n<ol>\n<li><a href=\"https://css-tricks.com/snippets/css/complete-guide-grid/\">CSS tricks: A Complete Guide to Grid</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout\">MDN: CSS Grid Layout</a></li>\n</ol>","frontmatter":{"date":"January 28, 2018","path":"/blog/css-grid-layout","title":"CSS Grid Layout"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}